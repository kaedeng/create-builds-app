name: Push Docker Image to ECR

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::443370705000:role/GH-ActionsRole
          role-session-name: DockerImgtoECR
          aws-region: us-west-2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.ECR_REPO }}
          IMAGE_TAG: latest
          PGADDR: ${{ secrets.PGADDR }}
          PGUSER: ${{ secrets.PGUSER }}
          PGPASS: ${{ secrets.PGPASS }}
        run: |
          docker build \
            --build-arg SPRING_DATASOURCE_URL=jdbc:postgresql://${PGADDR}/db \
            --build-arg SPRING_DATASOURCE_USERNAME=${PGUSER} \
            --build-arg SPRING_DATASOURCE_PASSWORD=${PGPASS} \
            -t $REGISTRY/$REPOSITORY-backend:$IMAGE_TAG ./backend
          docker push $REGISTRY/$REPOSITORY-backend:$IMAGE_TAG

      - name: Update ECS Service
        env:
          CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
          SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}
        run: |
          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service ${SERVICE_NAME} \
            --force-new-deployment
